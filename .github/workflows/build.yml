name: Validación y Notificaciones en SmartQuantEA

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: windows-latest  # Necesario para compilar MQL5 con MetaTrader

    steps:
    - name: Clonar repositorio con historial completo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Clona toda la historia para validar commits correctamente

    - name: Validar mensajes de commits
      shell: bash  # ⚠️ Se ejecuta en Bash para evitar errores en PowerShell
      run: |
        COMMIT_MSG=$(git log --format=%B -n 1)
        if [[ "$COMMIT_MSG" =~ ^(feat|fix|chore|docs|test): ]]; then
          echo "✅ Commit message válido"
        else
          echo "❌ Commit message inválido. Debe comenzar con feat:, fix:, chore:, docs:, test:"
          exit 1
        fi

    - name: Instalar MetaTrader 5
      run: |
        Invoke-WebRequest -Uri "https://download.mql5.com/cdn/web/metaquotes.software/metatrader5/mt5setup.exe" -OutFile "mt5setup.exe"
        Start-Process -FilePath "mt5setup.exe" -ArgumentList "/silent" -Wait

    - name: Compilar archivos MQL5 con MetaEditor
      run: |
        $MT5_PATH="C:\Program Files\MetaTrader 5"
        $METAEDITOR="$MT5_PATH\metaeditor64.exe"
        if (-Not (Test-Path "$METAEDITOR")) {
          Write-Host "❌ MetaEditor no encontrado en $MT5_PATH"
          exit 1
        }
        Write-Host "✅ MetaEditor encontrado, compilando archivos..."
        Get-ChildItem -Path . -Include *.mq5, *.mqh -Recurse | ForEach-Object {
          & "$METAEDITOR" /compile $_.FullName /log
          if ($LASTEXITCODE -ne 0) {
            Write-Host "❌ Error al compilar: $_.FullName"
            exit 1
          }
        }
        Write-Host "✅ Todos los archivos MQL5 fueron compilados correctamente."

  notify:
    runs-on: ubuntu-latest
    needs: validate  # Solo se ejecuta si la validación fue exitosa
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Notificar en Telegram si se aprueba un PR en main
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
        -d "chat_id=$TELEGRAM_CHAT_ID" \
        -d "text=✅ SmartQuantEA: Se ha fusionado un Pull Request en main"
